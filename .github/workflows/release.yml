name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Extract metadata for app
      id: meta-app
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Extract metadata for worker
      id: meta-worker
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}-worker
          type=semver,pattern={{major}}.{{minor}}-worker
          type=semver,pattern={{major}}-worker
          type=raw,value=latest-worker

    - name: Build and push app image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: app
        push: true
        tags: ${{ steps.meta-app.outputs.tags }}
        labels: ${{ steps.meta-app.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push worker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        target: worker
        push: true
        tags: ${{ steps.meta-worker.outputs.tags }}
        labels: ${{ steps.meta-worker.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changes for current version from CHANGELOG.md
          awk '/^## \['${{ steps.version.outputs.VERSION }}'\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.txt
          if [ ! -s release_notes.txt ]; then
            echo "Changes in ${{ steps.version.outputs.VERSION }}" > release_notes.txt
            echo "" >> release_notes.txt
            echo "See [CHANGELOG.md](./CHANGELOG.md) for details." >> release_notes.txt
          fi
        else
          echo "Changes in ${{ steps.version.outputs.VERSION }}" > release_notes.txt
          echo "" >> release_notes.txt
          echo "- New features and improvements" >> release_notes.txt
          echo "- Bug fixes and optimizations" >> release_notes.txt
        fi

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.txt
        draft: false
        prerelease: false
